//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include "mouse.dsti"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt { flavor = "tap-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        gaming_to {
            bindings = <&to 5>;
            key-positions = <20 31>;
            layers = <0>;
        };

        default_to {
            bindings = <&to 0>;
            key-positions = <20 31>;
            layers = <5>;
        };

        underscore {
            bindings = <&kp AT>;
            key-positions = <24 23>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };

        To_Base {
            bindings = <&to 0>;
            key-positions = <33 36>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <2 3>;
        };

        hold_nav_layer {
            bindings = <&mo 2>;
            key-positions = <20 33>;
            timeout-ms = <300>;
        };

        qwerty_to {
            bindings = <&to 8>;
            key-positions = <4 5>;
        };

        sims_to {
            bindings = <&to 7>;
            key-positions = <3 6>;
        };

        default_to_from_anywhre {
            bindings = <&to 0>;
            key-positions = <2 7 6 3>;
            layers = <7 8>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    behaviors {
        layer_tap_hold: layer_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_HOLD";
            bindings = <&sl>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                      &kp SQT    &kp COMMA  &kp PERIOD            &kp P      &kp Y                 &kp F               &kp G                &kp C                   &kp R  &kp L
                      &kp A      &kp O      &kp E                 &kp U      &kp I                 &kp D               &kp H                &kp T                   &kp N  &kp S
&mt LCTRL UNDERSCORE  &kp SLASH  &kp Q      &kp J                 &kp K      &kp X                 &kp B               &kp M                &kp W                   &kp V  &kp Z  &mt LEFT_GUI SEMI
                                            &mt LEFT_CONTROL ESC  &kp SPACE  &mt LEFT_SHIFT TAB    &mt LEFT_ALT ENTER  &layer_tap_hold 1 1  &mt LEFT_GUI BACKSPACE
            >;
        };

        symnum {
            bindings = <
           &kp N0     &kp N7  &kp N8  &kp N9  &kp TAB      &kp BSPC  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp MINUS
           &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp ESC      &kp RET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp PLUS
&kp COLON  &kp BSLH   &kp N1  &kp N2  &kp N3  &kp GRAVE    &kp DEL   &kp POUND        &kp EXCLAMATION        &to 3              &kp UNDER  &mt LEFT_GUI MINUS
                              &trans  &to 0   &trans       &trans    &to 2            &trans
            >;
        };

        navfn {
            bindings = <
        &kp F12  &kp F7  &kp F8  &kp F9  &trans    &kp K_UNDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT         &none
        &kp F11  &kp F4  &kp F5  &kp F6  &trans    &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT         &none
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &kp HOME    &kp PG_DN    &kp PG_UP   &mt CAPSLOCK END  &none  &trans
                         &trans  &to 0   &trans    &trans      &to 0        &trans
            >;
        };

        altsym {
            bindings = <
            &kp TAB  &none         &bt BT_CLR_ALL  &out OUT_BLE  &kp TAB    &kp BACKSPACE  &kp TILDE   &kp PRCNT  &kp CARET  &kp C_VOL_UP
            &kp ESC  &bt BT_SEL 3  &bt BT_SEL 4    &out OUT_USB  &kp ESC    &kp ENTER      &kp DOLLAR  &kp AMPS   &kp COLON  &kp K_MUTE
&bt BT_CLR  &none    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &trans     &kp DEL        &kp ASTRK   &trans     &trans     &kp C_VOL_DN  &trans
                                   &trans          &to 0         &trans     &trans         &to 1       &trans
            >;
        };

        L2 {
            bindings = <
            &trans  &trans        &trans        &trans        &out OUT_BLE    &trans      &trans        &trans        &trans  &trans
            &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &out OUT_USB    &kp K_MUTE  &kp C_VOL_UP  &kp C_VOL_DN  &trans  &trans
&bt BT_CLR  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans          &trans      &trans        &trans        &trans  &trans  &trans
                                  &trans        &to 0         &trans          &trans      &to 0         &trans
            >;
        };

        gaming {
            bindings = <
       &kp LEFT_ALT  &kp Q  &kp ENTER  &kp E      &kp R        &kp F  &kp G  &kp C  &kp R  &kp L
       &kp LSHFT     &kp A  &kp W      &kp D      &kp F        &kp D  &kp H  &kp T  &kp N  &kp S
&none  &kp LCTRL     &kp B  &kp S      &kp H      &kp J        &kp B  &kp M  &kp W  &kp V  &kp Z  &kp P
                            &lt 6 ESC  &kp SPACE  &lt 1 TAB    &none  &none  &none
            >;
        };

        factorio {
            bindings = <
        &kp LA(A)  &kp LA(B)  &kp LA(R)  &kp LA(G)  &trans       &trans  &trans  &trans  &trans  &trans
        &kp T      &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LA(D)    &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
                              &trans     &trans     &trans       &trans  &trans  &trans
            >;
        };

        sims {
            bindings = <
        &kp COMMA  &kp DOT  &kp PG_UP  &kp PG_DN  &kp N1      &trans  &trans  &trans  &trans  &trans
        &kp N9     &kp A    &kp A      &kp D      &kp N2      &trans  &trans  &trans  &trans  &trans
&trans  &kp N0     &none    &kp S      &kp M      &kp N3      &trans  &trans  &trans  &trans  &trans  &trans
                            &kp LBKT   &lt 9 ESC  &kp RBKT    &trans  &trans  &trans
            >;
        };

        qwerty {
            bindings = <
        &kp Q  &kp W  &kp E    &kp R        &kp T      &kp Y    &kp U     &kp I      &kp O    &kp P
        &kp A  &kp S  &kp D    &kp F        &kp G      &kp H    &kp J     &kp K      &kp L    &kp SEMI
&trans  &kp Z  &kp X  &kp C    &kp V        &kp B      &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp SQT
                      &kp ESC  &lt 9 SPACE  &kp TAB    &kp RET  &kp BSPC  &kp DEL
            >;
        };

        arrowsnums {
            bindings = <
        &trans  &trans    &trans    &trans     &trans    &trans  &kp N7  &kp N8  &kp N9  &trans
        &trans  &kp LEFT  &kp UP    &kp RIGHT  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans    &kp DOWN  &trans     &trans    &kp N1  &kp N1  &kp N2  &kp N3  &trans  &trans
                          &trans    &trans     &trans    &trans  &kp N0  &trans
            >;
        };
    };

    mouse_layer {
        display-name = "MSE";
        bindings = <
            &trans          &trans        &trans        &trans       &trans           &msc SCRL_LEFT &msc SCRL_DOWN &mmv MOVE_UP   &msc SCRL_UP    &msc SCRL_RIGHT
            &kp LGUI        &kp LALT      &kp LCTRL     &kp LSHFT    &trans           &trans         &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans
&trans      &trans          &trans        &trans        &trans       &trans           &trans         &mkp MB4       &mkp MCLK      &mkp MB5         &trans           &trans
                                          &trans        &trans       &trans           &mkp LCLK      &mkp RCLK       &trans
        >;
    };
};

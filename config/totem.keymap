//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include "mouse.dsti"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        gaming_to {
            bindings = <&to 5>;
            key-positions = <20 31>;
            layers = <0>;
        };

        default_to {
            bindings = <&to 0>;
            key-positions = <20 31>;
            layers = <5>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <24 23>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &kp SQT    &kp COMMA  &kp PERIOD  &kp P  &kp Y        &kp F      &kp G  &kp C           &kp R  &kp L
       &kp A      &kp O      &kp E       &kp U  &kp I        &kp D      &kp H  &kp T           &kp N  &kp S
&kp Q  &kp SLASH  &kp Q      &kp J       &kp K  &kp X        &kp B      &kp M  &kp W           &kp V  &kp Z  &kp LEFT_GUI
                             &kp LALT    &sl 1  &kp LCTRL    &kp SPACE  &sl 3  &kp LEFT_SHIFT
            >;
        };

        L1 {
            bindings = <
        &kp F12  &kp F7  &kp F8  &kp F9  &kp DELETE       &kp K_UNDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_REDO
        &kp F11  &kp F4  &kp F5  &kp F6  &kp BACKSPACE    &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT  &kp ESC
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp TAB          &kp HOME    &kp PG_DN    &kp PG_UP   &kp END    &kp CAPS    &trans
                         &trans  &sl 2   &trans           &trans      &sl 0        &trans
            >;
        };

        L2 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &sl 1   &trans    &trans  &sl 0   &trans
            >;
        };

        R1 {
            bindings = <
        &kp LS(CARET)  &kp N7  &kp N8  &kp N9  &kp N0       &kp LS(STAR)  &kp LS(RBRC)   &kp RBKT    &kp LS(RPAR)  &kp LS(AMPS)
        &kp SEMI       &kp N4  &kp N5  &kp N6  &kp EQUAL    &kp LS(PLUS)  &kp LS(LBRC)   &kp LBKT    &kp LS(LPAR)  &kp SEMI
&trans  &kp GRAVE      &kp N1  &kp N2  &kp N3  &kp BSLH     &kp LS(PIPE)  &kp LS(POUND)  &kp LS(AT)  &kp LS(EXCL)  &kp LS(TILDE)  &none
                               &trans  &sl 4   &trans       &trans        &sl 0          &trans
            >;
        };

        R2 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &kp DOLLAR  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans  &trans  &trans
                        &trans  &sl 3   &trans    &trans  &sl 0       &trans
            >;
        };

        gaming {
            bindings = <
       &kp TAB    &kp Q  &none       &kp E      &kp R         &none  &none  &none  &none  &none
       &kp LSHFT  &kp A  &kp W       &kp D      &kp F         &none  &none  &none  &none  &none
&none  &kp LCTRL  &kp B  &kp S       &kp H      &kp J         &none  &none  &none  &none  &none  &none
                         &kp ESCAPE  &kp SPACE  &lt 10 TAB    &none  &none  &none
            >;
        };

        media {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans             &trans           &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans             &trans           &trans  &trans
                        &trans  &trans  &trans    &trans  &kp K_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans          &kp K_PASTE     &kp K_COPY    &kp K_CUT        &kp K_UNDO
        &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp CAPS
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &kp HOME        &kp PG_UP     &kp PG_DN        &kp END     &trans
                        &trans  &trans  &trans    &kp RET         &kp BSPC        &kp DEL
            >;
        };

        mouse {
            bindings = <
            &trans  &trans        &trans        &trans        &out OUT_BLE    &trans          &trans          &trans        &trans           &trans
            &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &out OUT_USB    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&bt BT_CLR  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans          &trans          &mkp MB4        &mkp MB5      &trans           &trans  &trans
                                  &trans        &trans        &trans          &mkp MB1        &mkp MB3        &mkp MB2
            >;
        };

        sym {
            bindings = <
        &kp LS(PERCENT)  &kp LS(AMPS)  &kp RBKT      &kp LS(RBRC)   &kp LS(STAR)     &trans  &trans     &trans     &trans    &trans
        &kp LS(COLON)    &kp LS(DLLR)  &kp LBKT      &kp LS(LBRC)   &kp LS(PLUS)     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
&trans  &kp LS(TILDE)    &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(PIPE)     &trans  &trans     &trans     &trans    &trans    &trans
                                       &kp LS(LPAR)  &kp LS(RPAR)   &kp LS(UNDER)    &trans  &trans     &trans
            >;
        };

        num {
            bindings = <
        &kp CARET  &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans          &trans     &trans    &trans
        &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp LG(LSHIFT)  &kp RCTRL  &kp RALT  &kp LGUI
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans          &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans          &trans
            >;
        };

        fn {
            bindings = <
        &kp F12  &kp F7  &kp F8   &kp F9     &trans     &trans  &trans     &trans     &trans    &trans
        &kp F11  &kp F4  &kp F5   &kp F6     &trans     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &trans     &trans  &trans     &trans     &trans    &trans    &trans
                         &kp ESC  &kp SPACE  &kp TAB    &trans  &trans     &trans
            >;
        };
    };

    mouse_layer {
        display-name = "MSE";
        bindings = <
            &trans          &trans        &trans        &trans       &trans           &msc SCRL_LEFT &msc SCRL_DOWN &mmv MOVE_UP   &msc SCRL_UP    &msc SCRL_RIGHT
            &kp LGUI        &kp LALT      &kp LCTRL     &kp LSHFT    &trans           &trans         &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans
&trans      &trans          &trans        &trans        &trans       &trans           &trans         &mkp MB4       &mkp MCLK      &mkp MB5         &trans           &trans
                                          &trans        &trans       &trans           &mkp LCLK      &mkp RCLK       &trans
        >;
    };
};
